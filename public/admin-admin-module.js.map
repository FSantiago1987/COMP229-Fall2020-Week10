{"version":3,"sources":["./src/app/admin/order-table/order-table.component.ts","./src/app/admin/order-table/order-table.component.html","./src/app/admin/auth/auth.guard.ts","./src/app/admin/book-table/book-table.component.ts","./src/app/admin/book-table/book-table.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/book-editor/book-editor.component.ts","./src/app/admin/book-editor/book-editor.component.html","./src/app/admin/auth/auth.component.ts","./src/app/admin/auth/auth.component.html"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Order } from 'src/app/model/order.model';\nimport { OrderRepository } from 'src/app/model/order.repository';\n\n@Component({\n  templateUrl: './order-table.component.html'\n})\nexport class OrderTableComponent implements OnInit \n{\n  includeShipped = false;\n  constructor(private repository: OrderRepository,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  getOrders(): Order[]\n  {\n    return this.repository.getOrders().filter(o => this.includeShipped || !o.shipped);\n  }\n\n  markShipped(order: Order): void\n  {\n    order.shipped = (order.shipped) ? false : true;\n    this.repository.updateOrder(order);\n    this.router.navigateByUrl('/admin/main/orders');\n  }\n\n  delete(id: number): void\n  {\n      if(confirm(\"Are you sure?\"))\n      {\n        this.repository.deleteOrder(id);\n      }\n      else\n      {\n        this.router.navigateByUrl('/admin/main/orders');\n      }\n  }\n\n}\n","\n<!-- Checkbox -->\n<div class=\"form-check\">\n    <label class=\"form-check-label\">\n        <input type=\"checkbox\" class=\"form-check-input\"\n        [(ngModel)]='includeShipped'>\n        Display Shipped Orders\n    </label>\n</div>\n\n<table class=\"table table-sm\">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Postal Code</th>\n            <th colspan=\"2\">Cart</th>\n            <th></th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngIf='getOrders().length == 0'>\n            <td colspan=\"5\">There are no orders</td>\n        </tr>\n        <ng-template ngFor let-o [ngForOf]='getOrders()'>\n            <tr>\n                <td>{{ o.name }}</td>\n                <td>{{ o.postalCode }}</td>\n                <th>Product</th>\n                <th>Quantity</th>\n                <td>\n                    <button class=\"btn btn-warning m-1\" (click)='markShipped(o)'>\n                        <i class=\"{{ o.shipped ? 'fas fa-shipping-fast' : 'fas fa-truck' }}\"></i> {{o.shipped ? \"Shipped\" : \"Ship\"}}\n                    </button>\n                </td>\n                <td>\n                    <button class=\"btn btn-danger\" (click)='delete(o._id)'>\n                        <i class=\"fas fa-trash-alt\"></i> Delete\n                    </button>\n                </td>\n            </tr>\n            <tr *ngFor='let line of o.cart.lines'>\n                <td colspan=\"2\"></td>\n                <td>{{ line.book.title }}</td>\n                <td>{{ line.quantity }}</td>\n            </tr>\n        </ng-template>\n    </tbody>\n</table>\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from 'src/app/model/auth.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard\r\n{\r\n    path: ActivatedRouteSnapshot[];\r\n    route: ActivatedRouteSnapshot;\r\n\r\n    constructor(private router: Router, \r\n                private auth: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean\r\n    {\r\n        if(this.auth.authenticated)\r\n        {\r\n            console.log('authenticated');\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            console.log('cannot authenticate');\r\n            this.router.navigate(['/admin/auth']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Book } from 'src/app/model/book.model';\nimport { BookRepository } from 'src/app/model/book.repository';\n\n@Component({\n  templateUrl: './book-table.component.html',\n})\nexport class BookTableComponent implements OnInit {\n\n  constructor(private repository: BookRepository,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  getBooks(): Book[]\n  {\n    return this.repository.getBooks();\n  }\n\n  deleteBook(id: number): void\n  {\n    if(confirm(\"Are you sure?\") && (id !== undefined))\n    {\n      this.repository.deleteBook(id);\n    }\n    else\n    {\n      this.router.navigateByUrl('/admin/main/books');\n    }\n  }\n\n  addBook():void\n  {\n    this.router.navigateByUrl('/admin/main/books/add');\n  }\n\n  editBook(id: number): void\n  {\n    this.router.navigateByUrl('/admin/main/books/edit/' + id);    \n  }\n\n}\n","<table class=\"table table-sm table-striped\">\n    <thead>\n        <tr>\n            <th>Title</th>\n            <th>Author</th>\n            <th>Published</th>\n            <th>Description</th>\n            <th>Price</th>\n            <th></th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor='let b of getBooks()'>\n            <td>{{ b.title }}</td>\n            <td>{{ b.author }}</td>\n            <td>{{ b.published }}</td>\n            <td>{{ b.description }}</td>\n            <td>{{ b.price | currency: 'USD': 'symbol': '2.2-2' }}</td>\n            <td>\n                <button class=\"btn btn-sm btn-primary m-1\" (click)=\"editBook(b._id)\">\n                    <i class=\"fas fa-pencil-alt\"></i> Edit</button>\n            </td>\n            <td>\n                <button class=\"btn btn-sm btn-danger m-1\" (click)='deleteBook(b._id)'>\n                    <i class=\"fas fa-trash-alt\"></i> Delete\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<button class=\"btn btn-primary\" (click)='addBook()'>\n    <i class=\"fas fa-plus-circle\"></i> Add New Book\n</button>","import { Component } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../model/auth.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    templateUrl: './admin.component.html'\r\n})\r\nexport class AdminComponent\r\n{\r\n    constructor(private auth: AuthService,\r\n                private router: Router) { }\r\n    \r\n    logout(): void\r\n    {\r\n        this.auth.logout();\r\n\r\n        this.router.navigateByUrl('/');\r\n    }\r\n}","<div class=\"container-fluid\">\r\n    <div class=\"row\"></div>\r\n    <div class=\"row mt-2\">\r\n        <div class=\"col-3\">\r\n            <button class=\"btn btn-outline-info btn-block\"\r\n                routerLink='/admin/main/books'\r\n                routerLinkActive='active'>\r\n                Books\r\n            </button>\r\n\r\n            <button class=\"btn btn-outline-info btn-block\"\r\n                routerLink='/admin/main/orders'\r\n                routerLinkActive='active'>\r\n                Order\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AdminComponent } from './admin.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { OrderTableComponent } from './order-table/order-table.component';\r\nimport { BookEditorComponent } from './book-editor/book-editor.component';\r\nimport { BookTableComponent } from './book-table/book-table.component';\r\n\r\nconst routing = RouterModule.forChild([\r\n    { path: 'auth', component: AuthComponent },\r\n    { path: 'main', component: AdminComponent, canActivate: [AuthGuard],\r\n    children: [\r\n        { path: 'books/:mode/:id', component: BookEditorComponent, data: {title: 'Edit book'}, canActivate: [AuthGuard]},\r\n        { path: 'books/:mode', component: BookEditorComponent, data: {title: 'Add book'}, canActivate: [AuthGuard]},\r\n        { path: 'books', component: BookTableComponent, data: {title: 'Book Table'}, canActivate: [AuthGuard]},\r\n        { path: 'orders', component: OrderTableComponent, data: {title: 'Order Table'}, canActivate: [AuthGuard]},\r\n        { path: '**', redirectTo: 'book-list' }] \r\n    },\r\n    { path: '**', redirectTo: 'auth' },   \r\n]);\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, routing],\r\n    providers: [AuthGuard],\r\n    declarations: [AuthComponent, AdminComponent, OrderTableComponent, BookEditorComponent, BookTableComponent]\r\n})\r\nexport class AdminModule {\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { Book } from 'src/app/model/book.model';\nimport { BookRepository } from 'src/app/model/book.repository';\n\n@Component({\n  templateUrl: './book-editor.component.html',\n})\nexport class BookEditorComponent implements OnInit {\n  editing = false;\n  book: Book = new Book();\n\n  constructor(private repository: BookRepository,\n              private router: Router,\n              activeRoute: ActivatedRoute)\n  {\n    this.editing = activeRoute.snapshot.params.mode === 'edit';\n\n    if (this.editing)\n    {\n      Object.assign(this.book, repository.getBook(activeRoute.snapshot.params.id));\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(form: NgForm): void\n  {\n    this.repository.saveBook(this.book);\n    this.router.navigateByUrl('/admin/main/books');\n  }\n\n}\n","<div class=\"bg-primary p-2 text-white\" [class.bg-warning]='editing' [class.text-dark]='editing'>\n    <h5>{{ editing ? 'Edit' : 'Add'}} Book</h5>\n</div>\n<form novalidate #form='ngForm' (ngSubmit)='save(form)'>\n\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]='book.title'>\n    </div>\n\n    <div class=\"form-group\">\n        <label>Author</label>\n        <input type=\"text\" class=\"form-control\" name=\"author\" [(ngModel)]='book.author'>\n    </div>\n\n    <div class=\"form-group\">\n        <label>Published</label>\n        <input type=\"text\" class=\"form-control\" name=\"published\" [(ngModel)]='book.published'>\n    </div>\n\n    <div class=\"form-group\">\n        <label>Description</label>\n        <input type=\"text\" class=\"form-control\" name=\"description\" [(ngModel)]='book.description'>\n    </div>\n\n    <div class=\"form-group\">\n        <label>Price</label>\n        <input type=\"text\" class=\"form-control\" name=\"price\" [(ngModel)]='book.price'>\n    </div>\n\n    <button type='submit' class=\"btn btn-primary m-1\" [class.btn-warning]='editing'>\n        <i class=\"{{editing ? 'fas fa-save' : 'fas fa-plus-circle' }}\"></i> {{ editing ? \"Save\" : \"Add\" }}\n    </button>\n    <button type='reset' class=\"btn btn-secondary\" routerLink='/admin/main/books'>\n        <i class=\"fas fa-undo\"></i> Cancel\n    </button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../model/auth.service';\n\nimport { User } from '../../model/user.model';\n\n@Component({\n  templateUrl: './auth.component.html'\n})\nexport class AuthComponent implements OnInit {\n  public user: User;\n  public errorMessage: string;\n\n  constructor(private router: Router,\n              private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.user = new User();\n  }\n\n  authenticate(form: NgForm) : void\n  {\n    if(form.valid)\n    {\n      // perform authentication\n      this.auth.authenticate(this.user).subscribe(data => {\n        if(data.success)\n        {\n          this.auth.storeUserData(data.token, data.user);\n          this.router.navigateByUrl('admin/main'); \n        }\n      \n      });     \n    }\n    else\n    {\n      this.errorMessage = 'Form Data Invalid';\n    }\n  }\n\n}\n","<div class=\"bg-info p-2 text-center text-white\">\n    <h3>BookStore Admin</h3>\n</div>\n\n<main class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-sm-8 offset-sm-1\">\n            <div class=\"bg-danger mt-2 p-2 text-center text-white\"\n                *ngIf='errorMessage != null'>\n                {{ errorMessage }}\n            </div>\n            <h1>Please Login</h1>\n            <form autocomplete='off' #form='ngForm'\n            (ngSubmit)='authenticate(form)'>\n            <fieldset class=\"form-group\">\n                <label for=\"username\">Username:</label>\n                <input type=\"text\" class=\"form-control\"\n                [(ngModel)]='user.username'\n                name='username' placeholder='Enter Username'\n                id='username' required autofocus autocomplete='off'>\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n                <label for=\"password\">Password:</label>\n                <input type=\"password\" class=\"form-control\"\n                [(ngModel)]='user.password'\n                name='password' placeholder='Enter Password'\n                id='password' required autocomplete='off'>\n            </fieldset>\n\n            <fieldset class=\"form-group text-right\">\n                <button class=\"btn btn-primary m-1\" type=\"submit\">\n                    <i class=\"fas fa-sign-in-alt\"></i>\n                    Log In\n                </button>\n                <button class=\"btn btn-secondary m-1\" routerLink='/home'>\n                    <i class=\"fas fa-undo\"></i>\n                    Cancel\n                </button>\n            </fieldset>           \n        </form>\n        </div>\n    </div>\n</main>\n"],"sourceRoot":"webpack:///"}